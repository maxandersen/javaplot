apply plugin:'java'
apply plugin:'application'
defaultTasks 'run'
mainClassName='test.Main'

apply plugin: 'maven'
apply plugin: 'signing'

group = "com.panayotis.javaplot"
archivesBaseName = "javaplot"
version = "0.5.0"

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.kitfox.svg:svg-salamander:1.0'
}

task dist(dependsOn:'jar') << {
    exec () { executable 'ant'; workingDir 'demo'; args 'jar' }
    delete 'build', 'demo/build', 'one', "/tmp/JavaPlot-${version}", "JavaPlot-${version}.tar.bz2", "JavaPlot-${version}.tar.bz2"
    ant.copy(todir: "/tmp/JavaPlot-${version}", preservelastmodified: "true") {
        fileset(dir: "../JavaPlot", excludes:"**/.DS_Store .hg/** .gradle/** .nb-gradle/**")
    }
    exec () { executable 'tar'; workingDir '/tmp'; args "-jcvf", "JavaPlot-${version}.tar.bz2", "JavaPlot-${version}" }
    exec () { executable 'zip'; workingDir '/tmp'; args "-9", "-r", "JavaPlot-${version}.zip", "JavaPlot-${version}" }
    copy() { from "/tmp/JavaPlot-${version}.tar.bz2"; into "."}
    copy() { from "/tmp/JavaPlot-${version}.zip"; into="."}
    delete "/tmp/JavaPlot-${version}", "/tmp/JavaPlot-${version}.tar.bz2", "/tmp/JavaPlot-${version}.zip"
}

clean << {
    exec () {
        executable 'ant'
        workingDir 'demo'
        args 'clean'
    }
    delete "JavaPlot-${version}.tar.bz2", "JavaPlot-${version}.zip"
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Example Application'
                packaging 'jar'
                // optionally artifactId can be defined here 
                description 'A application used as an example on how to set up pushing  its components to the Central Repository.'
                url 'http://www.example.com/example-application'

                scm {
                    connection 'scm:svn:http://foo.googlecode.com/svn/trunk/'
                    developerConnection 'scm:svn:https://foo.googlecode.com/svn/trunk/'
                    url 'http://foo.googlecode.com/svn/trunk/'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'teras'
                        name 'Panayotis Katsaloulis'
                        email 'panayotis@panayotis.com'
                    }
                }
            }
        }
    }
}

